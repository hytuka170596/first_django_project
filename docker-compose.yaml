services:
  app:
    container_name: django_container
    build:
      dockerfile: ./Dockerfile
    command:
      - "gunicorn"
      - "mysite.wsgi:application"
      - "--bind"
      - "0.0.0.0:8080"
    ports:
      - "8000:8080"
    restart: always
    env_file:
      - .env
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    volumes:
      - ./mysite/database:/app/database
    depends_on:
      - redis

  redis:
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    image: redis:latest
    container_name: redis_container
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  grafana:
    hostname: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    image: grafana/grafana:latest
    ports:
      - "3000:3000"

  loki:
    hostname: loki
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
